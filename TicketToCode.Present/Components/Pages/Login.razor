@page "/login"
@rendermode InteractiveServer
@using TicketToCode.Api.Services
@using static TicketToCode.Api.Services.AuthService
@using static TicketToCode.Api.Endpoints.Auth.Login
@inject NavigationManager Nav
@inject HttpClient Http
<h3>Login</h3>

<div>
	@if (errorMessage != null)
	{
		<p class="text-danger">@errorMessage</p>
	}
</div>

<div>
	<input type="text" @bind="Username" placeholder="Username" />
	<input type="password" @bind="Password" placeholder="Password" />
	<button class="btn btn-primary" @onclick="UserLogin">Log in</button>
	<p>@successMessage</p>
</div>



@code {
	private string Username { get; set; } = "";
	private string Password { get; set; } = "";
	private string? errorMessage;
	private string? successMessage;

	private async void UserLogin()
	{
		try
		{
			// TODO: Make it work and move to external service, don't handle this here.
			var user = await Http.PostAsJsonAsync("/auth/login", new Request(Username, Password));


			if (user.StatusCode == System.Net.HttpStatusCode.NotFound)
			{
				errorMessage = await user.Content.ReadAsStringAsync();
				successMessage = null;
			}
			else if (user.StatusCode == System.Net.HttpStatusCode.OK)
			{
				errorMessage = null;
				successMessage = $"Welcome {Username}";
			}

		}
		catch (Exception ex)
		{
			errorMessage = $"Error: {ex.Message}";
		}

	}
}
